{
  "contract_name": "storage-contract",
  "contract_version": "0.2.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "save_data"
        ],
        "properties": {
          "save_data": {
            "$ref": "#/definitions/SaveDataMsg"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "SaveDataMsg": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "query_data"
        ],
        "properties": {
          "query_data": {
            "$ref": "#/definitions/QueryDataMsg"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "QueryDataMsg": {
        "type": "object",
        "required": [
          "data_hash"
        ],
        "properties": {
          "data_hash": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "query_data": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DataResponse",
      "type": "object",
      "required": [
        "data",
        "finalized",
        "latest_finalized_epoch"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/StoredData"
        },
        "finalized": {
          "type": "boolean"
        },
        "latest_finalized_epoch": {
          "$ref": "#/definitions/Uint64"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "StoredData": {
          "type": "object",
          "required": [
            "btc_height",
            "btc_timestamp",
            "data",
            "saved_at_btc_epoch"
          ],
          "properties": {
            "btc_height": {
              "$ref": "#/definitions/Uint64"
            },
            "btc_timestamp": {
              "$ref": "#/definitions/Uint64"
            },
            "data": {
              "type": "string"
            },
            "saved_at_btc_epoch": {
              "$ref": "#/definitions/Uint64"
            }
          },
          "additionalProperties": false
        },
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    }
  }
}
